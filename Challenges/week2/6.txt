#include <iostream>
#include <string>
#include <map>
#include <vector>
#include <algorithm>


using namespace std;

int mod(int n) {
    if (n < 0) {
        return -1 * n;
    } else {
        return n;
    }
}

int main() {

    int num;

    cin >> num;

    vector<int> n(num);

    for (int i = 0; i < num ; i++) {
        int temp;
        cin >> temp;
        int j;
        for (j = i; j > 0 && temp < n[j - 1]; j--) {
            n[j] = n[j - 1];
        }
        n[j] = temp;
    }

    vector<int> sum;

    for (int i = 0; i < n.size(); i++) {
        for (int j = i; j < n.size(); j++) {
            if (j != i) {
                sum.push_back(n[i] + n[j]);
            }
        }
    }

    sort(sum.begin(), sum.end());

    cin >> num;

    int element;

    for (int i = 0; i < num; i++) {
        cin >> element;
        int left = 0, right = sum.size() - 1;
        int ind = 0;
        while (left <= right) {
            int mid = (left + right) / 2;
            if (sum[mid] < element) {
                left = mid + 1;
            }
            else if (element < sum[mid]) {
                right = mid - 1;
            }
            else {
               ind = mid;
               break;
            }
            ind = right;
        }
        if (ind == -1) {
            ind = 0;
        }

        if ((mod(sum[ind] - element) == mod(sum[ind + 1] - element)) && (sum[ind] != sum[ind + 1])) {
            cout << sum[ind] << " " << sum[ind + 1] << endl;
        } else {
            if (mod(sum[ind] - element) < mod(sum[ind + 1] - element)) {
                cout << sum[ind] << endl;
            } else {
                cout << sum[ind + 1] << endl;
            }

        }

    }



    return 0;
}

